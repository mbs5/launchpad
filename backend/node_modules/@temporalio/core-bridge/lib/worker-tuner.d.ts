/**
 * A worker tuner allows the customization of the performance characteristics of workers by
 * controlling how "slots" are handed out for different task types. In order to poll for and then
 * run tasks, a slot must first be reserved by the {@link SlotSupplier} returned by the tuner.
 *
 * @experimental
 */
export interface WorkerTuner {
    workflowTaskSlotSupplier: SlotSupplier;
    activityTaskSlotSupplier: SlotSupplier;
    localActivityTaskSlotSupplier: SlotSupplier;
}
/**
 * Controls how slots are handed out for a specific task type.
 *
 * For now, only {@link ResourceBasedSlotOptions} and {@link FixedSizeSlotSupplier} are supported,
 * but we may add support for custom tuners in the future.
 *
 * @experimental
 */
export type SlotSupplier = ResourceBasedSlotsForType | FixedSizeSlotSupplier;
/**
 * Options for a specific slot type within a {@link ResourceBasedSlotsForType}
 *
 * @experimental
 */
export interface ResourceBasedSlotOptions {
    minimumSlots: number;
    maximumSlots: number;
    rampThrottleMs: number;
}
/**
 * @experimental
 */
type ResourceBasedSlotsForType = ResourceBasedSlotOptions & {
    type: 'resource-based';
    tunerOptions: ResourceBasedTunerOptions;
};
/**
 * Options for a {@link ResourceBasedTuner} to control target resource usage
 *
 * @experimental
 */
export interface ResourceBasedTunerOptions {
    targetMemoryUsage: number;
    targetCpuUsage: number;
}
/**
 * A fixed-size slot supplier that will never issue more than a fixed number of slots.
 *
 * @experimental
 */
export interface FixedSizeSlotSupplier {
    type: 'fixed-size';
    numSlots: number;
}
export {};
