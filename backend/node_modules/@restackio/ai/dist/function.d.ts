import { ApplicationFailure, activityInfo, heartbeat as temporalHeartbeat, sleep as temporalSleep, Info } from "@temporalio/activity";
export { activityInfo as functionInfo };
/**
 * FunctionFailure represents an application-specific failure in a function.
 *
 * @param message - The error message describing the failure
 * @param details - Optional additional details about the failure
 * @returns An ApplicationFailure instance
 */
export declare const FunctionFailure: typeof ApplicationFailure;
/**
 * Log a message from within a function.
 */
export declare const log: import("@temporalio/common").Logger;
/**
 * Send a heartbeat from a long-running function.
 *
 * @param details - Optional details to include with the heartbeat
 */
export declare const heartbeat: typeof temporalHeartbeat;
/**
 * Pause the execution of a function for a specified duration.
 *
 * @param duration - The duration to sleep in milliseconds
 */
export declare const sleep: typeof temporalSleep;
/**
 * Get information about the current workflow run.
 *
 * @returns An Info object containing details about the current workflow
 */
export declare function currentWorkflow(): Info;
