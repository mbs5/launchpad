"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineEvent = defineEvent;
exports.onEvent = onEvent;
const workflow_1 = require("@temporalio/workflow");
/**
 * Define an event for a Workflow.
 *
 * A definition is used to register an event listener in the Workflow via onEvent and to send an event to a Workflow using sendWorkflowEvent.
 * A definition can be reused in multiple Workflows.
 */
function defineEvent(name) {
    return (0, workflow_1.defineUpdate)(name);
}
/**
 * Set a listener for an event in a Workflow.
 *
 * If this is called multiple times for a given event the last handler will overwrite any previous calls.
 *
 * @param def an event definition as returned by {@link defineEvent}.
 * @param handler a compatible handler function for the given definition or `undefined` to unset the handler.
 * @param options an optional `description` of the handler and an optional update `validator` function.
 */
function onEvent(def, handler, options) {
    (0, workflow_1.setHandler)(def, handler, options);
}
