"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunk6MWHGHJEcjs = require('./chunk-6MWHGHJE.cjs');var p=/[a-z]/u,C={preserveConsecutiveUppercase:!0};function r(e,t){return typeof e=="string"?n(e,t):s=>n(s,e)}var n=(e,{preserveConsecutiveUppercase:t=C.preserveConsecutiveUppercase}={})=>_chunk6MWHGHJEcjs.a.call(void 0, p.test(e)?e:e.toLowerCase()).map((s,a)=>`${_nullishCoalesce((a===0?_optionalChain([s, 'access', _ => _[0], 'optionalAccess', _2 => _2.toLowerCase, 'call', _3 => _3()]):_optionalChain([s, 'access', _4 => _4[0], 'optionalAccess', _5 => _5.toUpperCase, 'call', _6 => _6()])), () => (""))}${t?s.slice(1):s.slice(1).toLowerCase()}`).join("");exports.a = r;
